/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import code.DBConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public final class sellerProfile extends javax.swing.JFrame {

    /**
     * Creates new form sellerProfile
     */
    
    public static String username = null;
    public static String email = null;
    public static String mobilenumber = null;
    Connection con = null;
    PreparedStatement pst1 = null;
    PreparedStatement pst2 = null;
    PreparedStatement pst3 = null;
    PreparedStatement pst4 = null;
    PreparedStatement pst5 = null;
    PreparedStatement pst6 = null;
    PreparedStatement pst7 = null;
    ResultSet rs1 = null;
    ResultSet rs2 = null;
    ResultSet rs3 = null;
    ResultSet rs4 = null;
    ResultSet rs5 = null;
    ResultSet rs6 = null;
    ResultSet rs7 = null;
    ArrayList list = new ArrayList();
    
    public sellerProfile() throws ClassNotFoundException, SQLException {
        
        initComponents();
        con = DBConnect.connection();
        userNameBox.setText(username);
        emailBox.setText(email);
        mobileNumberBox.setText(mobilenumber);
        setTable();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userNameBox = new javax.swing.JTextField();
        emailBox = new javax.swing.JTextField();
        mobileNumberBox = new javax.swing.JTextField();
        updateProfileButton = new javax.swing.JButton();
        foodItemControlButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        catagoryTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        receivedButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Profile");

        jLabel1.setText("user name");

        jLabel2.setText("email");

        jLabel3.setText("mobile number");

        userNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameBoxActionPerformed(evt);
            }
        });

        mobileNumberBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNumberBoxActionPerformed(evt);
            }
        });

        updateProfileButton.setText("Update Profile");
        updateProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProfileButtonActionPerformed(evt);
            }
        });

        foodItemControlButton.setText("Food Item Control");
        foodItemControlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodItemControlButtonActionPerformed(evt);
            }
        });

        catagoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "catagory"
            }
        ));
        jScrollPane1.setViewportView(catagoryTable);

        jLabel4.setText("Item Catogary List");

        receivedButton.setText("Received Orders");
        receivedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userNameBox)
                            .addComponent(emailBox)
                            .addComponent(mobileNumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(foodItemControlButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateProfileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(receivedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(71, 71, 71))
            .addGroup(layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateProfileButton))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(emailBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodItemControlButton))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mobileNumberBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(receivedButton))
                .addGap(46, 46, 46)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameBoxActionPerformed

    private void mobileNumberBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNumberBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNumberBoxActionPerformed

    private void updateProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProfileButtonActionPerformed
        UpdateProfileSeller up;
        try {
            up = new UpdateProfileSeller();
            up.setVisible(true);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(sellerProfile.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.dispose();
    }//GEN-LAST:event_updateProfileButtonActionPerformed

    private void foodItemControlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodItemControlButtonActionPerformed
        FoodItemControl.email = email;
        FoodItemControl.onlySeller = true;
        FoodItemControl fic = new FoodItemControl();
        fic.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_foodItemControlButtonActionPerformed

    private void receivedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivedButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receivedButtonActionPerformed

    /**
     * @throws java.sql.SQLException
     */
    
    public void setTable() throws SQLException{
        String t = "true";
        String queary1 = "SELECT sellerID FROM sellers WHERE (email = ? AND breakfast = ?)";
        String queary2 = "SELECT sellerID FROM sellers WHERE (email = ? AND lunch = ?)";
        String queary3 = "SELECT sellerID FROM sellers WHERE (email = ? AND dinner = ?)";
        String queary4 = "SELECT sellerID FROM sellers WHERE (email = ? AND sweet = ?)";
        String queary5 = "SELECT sellerID FROM sellers WHERE (email = ? AND fruit = ?)";
        String queary6 = "SELECT sellerID FROM sellers WHERE (email = ? AND backery = ?)";
        String queary7 = "SELECT sellerID FROM sellers WHERE (email = ? AND bigorder = ?)";
        DefaultTableModel model = (DefaultTableModel) catagoryTable.getModel();
        Object rowData[] = new Object[1];
        
        pst1 = con.prepareStatement(queary1);
        pst1.setString(1, email);
        pst1.setString(2, t);
        rs1 = pst1.executeQuery();
        if(rs1.next()){
            list.add("breakfast");
        }
        
        pst2 = con.prepareStatement(queary2);
        pst2.setString(1, email);
        pst2.setString(2, t);
        rs2 = pst2.executeQuery();
        if(rs2.next()){
            list.add("lunch");
        }
        
        pst3 = con.prepareStatement(queary3);
        pst3.setString(1, email);
        pst3.setString(2, t);
        rs3 = pst3.executeQuery();
        if(rs3.next()){
            list.add("dinner");
        }
        
        pst4 = con.prepareStatement(queary4);
        pst4.setString(1, email);
        pst4.setString(2, t);
        rs4 = pst4.executeQuery();
        if(rs4.next()){
            list.add("sweet");
        }
        
        pst5 = con.prepareStatement(queary5);
        pst5.setString(1, email);
        pst5.setString(2, t);
        rs5 = pst5.executeQuery();
        if(rs5.next()){
            list.add("fruit");
        }
        
        pst6 = con.prepareStatement(queary6);
        pst6.setString(1, email);
        pst6.setString(2, t);
        rs6 = pst6.executeQuery();
        if(rs6.next()){
            list.add("backery");
        }
        
        pst7 = con.prepareStatement(queary7);
        pst7.setString(1, email);
        pst7.setString(2, t);
        rs7 = pst7.executeQuery();
        if(rs7.next()){
            list.add("bigorder");
        }
        for(int i=0;i<list.size();i++){
            rowData[0] = list.get(i);
            model.addRow(rowData);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sellerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sellerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sellerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sellerProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try{
                    new sellerProfile().setVisible(true);
                }catch (ClassNotFoundException ex) {
                    Logger.getLogger(customerProfile.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(sellerProfile.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable catagoryTable;
    private javax.swing.JTextField emailBox;
    private javax.swing.JButton foodItemControlButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mobileNumberBox;
    private javax.swing.JButton receivedButton;
    private javax.swing.JButton updateProfileButton;
    private javax.swing.JTextField userNameBox;
    // End of variables declaration//GEN-END:variables
}
