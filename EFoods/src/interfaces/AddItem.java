/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import code.DBConnect;
import static interfaces.FoodItemControl.onlySeller;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class AddItem extends javax.swing.JFrame {

    /**
     * Creates new form AddItem
     */
    
    Connection con = null;
    PreparedStatement pst1 = null;
    PreparedStatement pst2 = null;
    PreparedStatement pst3 = null;
    PreparedStatement pst4 = null;
    ResultSet rs1 = null;
    ResultSet rs2 = null;
    int sellerID;
    int itemID;
    String email;
    String itemName;
    int price;
    String ava = "is available";
    String del = "not deleted";
    
    public AddItem() throws ClassNotFoundException {
        initComponents();
        
        con = DBConnect.connection();
        email = FoodItemControl.email;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        profileButton = new javax.swing.JButton();
        foodItemControlButton = new javax.swing.JButton();
        bigOrderBox = new javax.swing.JCheckBox();
        sweetBox = new javax.swing.JCheckBox();
        fruitBox = new javax.swing.JCheckBox();
        breakfastBox = new javax.swing.JCheckBox();
        backeryBox = new javax.swing.JCheckBox();
        lunchBox = new javax.swing.JCheckBox();
        dinnerBox = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        priceBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Item");

        jLabel1.setText("Item");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        profileButton.setText("Profile");
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });

        foodItemControlButton.setText("Food Item Control");
        foodItemControlButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodItemControlButtonActionPerformed(evt);
            }
        });

        bigOrderBox.setText("Big orders");
        bigOrderBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bigOrderBoxActionPerformed(evt);
            }
        });

        sweetBox.setText("Sweets");

        fruitBox.setText("Fruits");
        fruitBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fruitBoxActionPerformed(evt);
            }
        });

        breakfastBox.setText("Breakfast");
        breakfastBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakfastBoxActionPerformed(evt);
            }
        });

        backeryBox.setText("Backery Items");

        lunchBox.setText("Lunch");
        lunchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lunchBoxActionPerformed(evt);
            }
        });

        dinnerBox.setText("Dinner");

        jLabel5.setText("Food item catagory");

        jLabel2.setText("Price");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bigOrderBox)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(backeryBox)
                                .addComponent(sweetBox, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(breakfastBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lunchBox, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(dinnerBox, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fruitBox, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(profileButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(foodItemControlButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemBox, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(priceBox))
                        .addGap(60, 60, 60)
                        .addComponent(addButton)))
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(foodItemControlButton)
                .addGap(18, 18, 18)
                .addComponent(profileButton)
                .addGap(63, 63, 63)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(breakfastBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lunchBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dinnerBox)
                .addGap(5, 5, 5)
                .addComponent(sweetBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fruitBox)
                .addGap(5, 5, 5)
                .addComponent(backeryBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bigOrderBox)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(jLabel2)
                    .addComponent(priceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        itemName = itemBox.getText();
        price = Integer.parseInt(priceBox.getText());
        if("".equals(itemName)){
            JOptionPane.showMessageDialog(null, "enter the item");
        }
        else{
            try {
                setSellerID();
            } catch (SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                insertItem();
            } catch (SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                setItemID();
            } catch (SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                setCatagoryTrue();
            } catch (SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            this.dispose();
            JOptionPane.showMessageDialog(null, "item added succesfully");
            AddItem ai;
            try {
                ai = new AddItem();
                ai.setVisible(true);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
        if(onlySeller){
            sellerProfile sp;
            try {
                sp = new sellerProfile();
                sp.setVisible(true);
                this.dispose();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            customerSellerProfile csp;
            try {
                csp = new customerSellerProfile();
                csp.setVisible(true);
                this.dispose();
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_profileButtonActionPerformed

    private void foodItemControlButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodItemControlButtonActionPerformed
        FoodItemControl fic = new FoodItemControl();
        fic.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_foodItemControlButtonActionPerformed

    private void bigOrderBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bigOrderBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bigOrderBoxActionPerformed

    private void fruitBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fruitBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fruitBoxActionPerformed

    private void breakfastBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakfastBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breakfastBoxActionPerformed

    private void lunchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lunchBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lunchBoxActionPerformed

    /** 
     * @throws java.sql.SQLException 
     */
    
    public void setSellerID() throws SQLException{
        
        String query;
        query = "SELECT sellerID FROM sellers WHERE email = ?";
        pst1 = con.prepareStatement(query);
        pst1.setString(1, email);
        rs1 = pst1.executeQuery();
        if(rs1.next()){
            sellerID = rs1.getInt("sellerID");
        }
    } 
    
    public void insertItem() throws SQLException{
        String quary;
        quary = "INSERT INTO items (sellerID , itemname , available , deletestatus , price) VALUES ('"+ sellerID +"' , '"+ itemName +"' , '"+ ava +"' , '"+ del +"' , '"+ price +"')";
        pst2 = con.prepareStatement(quary);
        pst2.execute();
    }
    
    private void setCatagoryTrue() throws SQLException{
        String quary;
        String t = "true";
        
        if(breakfastBox.isSelected()){
                quary = "UPDATE items SET breakfast = ? WHERE itemID = ?";
                pst3 = con.prepareStatement(quary);
                pst3.setString(1, t);
                pst3.setInt(2, itemID);
                pst3.execute();
            }
            if(lunchBox.isSelected()){
                quary = "UPDATE items SET lunch = ? WHERE itemID = ?";
                pst3 = con.prepareStatement(quary);
                pst3.setString(1, t);
                pst3.setInt(2, itemID);
                pst3.execute();
            }
            if(dinnerBox.isSelected()){
                quary = "UPDATE items SET dinner = ? WHERE itemID = ?";
                pst3 = con.prepareStatement(quary);
                pst3.setString(1, t);
                pst3.setInt(2, itemID);
                pst3.execute();
            }
            if(sweetBox.isSelected()){
                quary = "UPDATE items SET sweet = ? WHERE itemID = ?";
                pst3 = con.prepareStatement(quary);
                pst3.setString(1, t);
                pst3.setInt(2, itemID);
                pst3.execute();
            }
            if(fruitBox.isSelected()){
                quary = "UPDATE items SET fruit = ? WHERE itemID = ?";
                pst3 = con.prepareStatement(quary);
                pst3.setString(1, t);
                pst3.setInt(2, itemID);
                pst3.execute();
            }
            if(backeryBox.isSelected()){
                quary = "UPDATE items SET backery = ? WHERE itemID = ?";
                pst3 = con.prepareStatement(quary);
                pst3.setString(1, t);
                pst3.setInt(2, itemID);
                pst3.execute();
            }
            if(bigOrderBox.isSelected()){
                quary = "UPDATE items SET bigorder = ? WHERE itemID = ?";
                pst3 = con.prepareStatement(quary);
                pst3.setString(1, t);
                pst3.setInt(2, itemID);
                pst3.execute();
            }
    }
    
    private void setItemID() throws SQLException{
        String query;
        query = "SELECT itemID FROM items WHERE (sellerID = ? AND itemname = ?)";
        pst4 = con.prepareStatement(query);
        pst4.setInt(1, sellerID);
        pst4.setString(2, itemName);
        rs2 = pst4.executeQuery();
        if(rs2.next()){
            itemID = rs2.getInt("itemID");
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AddItem().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JCheckBox backeryBox;
    private javax.swing.JCheckBox bigOrderBox;
    private javax.swing.JCheckBox breakfastBox;
    private javax.swing.JCheckBox dinnerBox;
    private javax.swing.JButton foodItemControlButton;
    private javax.swing.JCheckBox fruitBox;
    private javax.swing.JTextField itemBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JCheckBox lunchBox;
    private javax.swing.JTextField priceBox;
    private javax.swing.JButton profileButton;
    private javax.swing.JCheckBox sweetBox;
    // End of variables declaration//GEN-END:variables
}
